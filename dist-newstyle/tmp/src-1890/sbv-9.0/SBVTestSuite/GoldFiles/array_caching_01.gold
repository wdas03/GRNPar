** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s0 () Int 0)
[GOOD] (define-fun s3 () Int 2)
[GOOD] (define-fun s4 () Int 1)
[GOOD] ; --- skolem constants ---
[GOOD] (declare-fun s1 () Int) ; tracks user variable "x"
[GOOD] ; --- constant tables ---
[GOOD] ; --- skolemized tables ---
[GOOD] ; --- arrays ---
[GOOD] (define-fun array_0 () (Array Int Int) ((as const (Array Int Int)) 0))
[GOOD] (declare-fun array_1 () (Array Int Int))
[GOOD] (define-fun array_1_initializer_0 () Bool (= array_1 (store array_0 s0 s3)))
[GOOD] (declare-fun array_2 () (Array Int Int))
[GOOD] (declare-fun array_3 () (Array Int Int))
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user given axioms ---
[GOOD] ; --- preQuantifier assignments ---
[GOOD] (define-fun s2 () Bool (= s0 s1))
[GOOD] (define-fun s5 () Int (+ s1 s4))
[GOOD] (define-fun s6 () Int (select array_1 s5))
[GOOD] (define-fun s7 () Int (select array_2 s0))
[GOOD] (define-fun s8 () Int (select array_3 s0))
[GOOD] (define-fun s9 () Int (ite s2 s7 s8))
[GOOD] (define-fun s10 () Bool (= s4 s9))
[GOOD] ; --- arrayDelayeds ---
[GOOD] (define-fun array_2_initializer_0 () Bool (= array_2 (store array_1 s0 s6)))
[GOOD] (define-fun array_3_initializer_0 () Bool (= array_3 (store array_1 s5 s4)))
[GOOD] ; --- arraySetups ---
[GOOD] (define-fun array_0_initializer () Bool true) ; no initialization needed
[GOOD] (define-fun array_1_initializer () Bool array_1_initializer_0)
[GOOD] (assert array_1_initializer)
[GOOD] (define-fun array_2_initializer () Bool array_2_initializer_0)
[GOOD] (assert array_2_initializer)
[GOOD] (define-fun array_3_initializer () Bool array_3_initializer_0)
[GOOD] (assert array_3_initializer)
[GOOD] ; --- formula ---
[GOOD] ; --- postQuantifier assignments ---
[GOOD] ; --- delayedEqualities ---
[GOOD] ; -- finalAssert ---
[GOOD] (assert s10)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s1))
[RECV] ((s1 (- 1)))
*** Solver   : Z3
*** Exit code: ExitSuccess

FINAL OUTPUT:
Satisfiable. Model:
  x = -1 :: Integer
