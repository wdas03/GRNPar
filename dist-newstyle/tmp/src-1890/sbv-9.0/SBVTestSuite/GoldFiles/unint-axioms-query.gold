** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has user-defined sorts, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] (declare-sort B 0)  ; N.B. Uninterpreted sort.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- skolem constants ---
[GOOD] (declare-fun s0 () B) ; tracks user variable "p"
[GOOD] (declare-fun s1 () B) ; tracks user variable "q"
[GOOD] (declare-fun s2 () B) ; tracks user variable "r"
[GOOD] ; --- constant tables ---
[GOOD] ; --- skolemized tables ---
[GOOD] ; --- arrays ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user given axioms ---
[GOOD] ; --- preQuantifier assignments ---
[GOOD] ; --- arrayDelayeds ---
[GOOD] ; --- arraySetups ---
[GOOD] ; --- formula ---
[GOOD] ; --- postQuantifier assignments ---
[GOOD] ; --- delayedEqualities ---
[GOOD] ; -- finalAssert ---
[GOOD] (declare-fun AND (B B) B)
[GOOD] (declare-fun NOT (B) B)
[GOOD] (declare-fun OR (B B) B)
[GOOD] (define-fun s3 () B (AND s1 s2))
[GOOD] (define-fun s4 () B (OR s0 s3))
[GOOD] (define-fun s5 () B (NOT s4))
[GOOD] (define-fun s6 () B (NOT s0))
[GOOD] (define-fun s7 () B (NOT s1))
[GOOD] (define-fun s8 () B (AND s6 s7))
[GOOD] (define-fun s9 () B (NOT s2))
[GOOD] (define-fun s10 () B (AND s6 s9))
[GOOD] (define-fun s11 () B (OR s8 s10))
[GOOD] (define-fun s12 () Bool (distinct s5 s11))
[GOOD] (assert s12)
[GOOD] ; -- user given axiom: OR distributes over AND
[GOOD] (assert (forall ((p B) (q B) (r B))
          (= (AND (OR p q) (OR p r))
             (OR p (AND q r)))))
[GOOD] ; -- user given axiom: de Morgan
[GOOD] (assert (forall ((p B) (q B))
          (= (NOT (OR p q))
             (AND (NOT p) (NOT q)))))
[GOOD] ; -- user given axiom: double negation
[GOOD] (assert (forall ((p B)) (= (NOT (NOT p)) p)))
[SEND] (check-sat)
[RECV] unsat
*** Solver   : Z3
*** Exit code: ExitSuccess

 FINAL:Unsat
DONE!
